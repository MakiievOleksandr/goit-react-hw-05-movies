{"version":3,"file":"static/js/962.d8348af8.chunk.js","mappings":"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","sources":["components/shared/services/movies-api.js","components/module/Cast/AddInfoLinks.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/movie-details.module.scss?1161","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '2fc9cddb581d13f9fbb06828f41e996e',\n    page: 1,\n  },\n});\n\nexport const getPopularMovie = async query => {\n  const { data } = await instance.get(`/movie/${query}`);\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\nexport const getImagesSettings = async () => {\n  const { data } = await instance.get(`/configuration`);\n  return data;\n};\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getMovies = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nconst AddInfoLinks = () => {\n  const location = useLocation();\n  const { from } = location.state;\n\n  return (\n    <>\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default AddInfoLinks;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movie-details_container__ONjBb\",\"text\":\"movie-details_text__wlWyq\"};","import { useParams, useNavigate, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\n\nimport AddInfoLinks from 'components/module/Cast/AddInfoLinks';\n\nimport {\n  getMovieDetails,\n  getImagesSettings,\n} from 'components/shared/services/movies-api';\n\nimport scss from './movie-details.module.scss';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState({});\n  const [image, setImage] = useState({});\n  const { title, poster_path, vote_average, overview, genres } = details;\n  const { base_url, poster_sizes } = image;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { from } = location.state;\n\n  const genresString = () => {\n    if (!genres?.length) {\n      return;\n    }\n    let string = [];\n    genres.map(({ name }) => string.push(name));\n    return string.join(', ');\n  };\n\n  const size = () => {\n    if (!poster_sizes?.length) {\n      return;\n    }\n    return poster_sizes[3];\n  };\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const details = await getMovieDetails(movieId);\n        setDetails(details);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  useEffect(() => {\n    const fetchImageSettings = async () => {\n      try {\n        const { images } = await getImagesSettings();\n        setImage(images);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n      }\n    };\n\n    fetchImageSettings();\n  }, []);\n\n  // const handleBack = evt => {\n  //   navigate(from);\n  //   setDetails({});\n  //   setImage({});\n  // };\n  const handleBack = useCallback(() => navigate(from), [navigate, from]);\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleBack}>\n        Go back\n      </button>\n      <div className={scss.container}>\n        {image ? (\n          <img src={`${base_url}${size()}${poster_path}`} alt={title} />\n        ) : (\n          <h2>Not page</h2>\n        )}\n        <div>\n          <h2 className={scss.title}>{title}</h2>\n          <p className={scss.text}>\n            User score: {`${(vote_average?.toFixed(2) * 100) / 10}%`}\n          </p>\n\n          <h3 className={scss.subTitle}>Overiew:</h3>\n          <p className={scss.text}>{overview}</p>\n          <h4 className={scss.subTitle}>Genres:</h4>\n          <p className={scss.text}>{genresString()}</p>\n        </div>\n      </div>\n      <AddInfoLinks />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["instance","axios","baseURL","params","api_key","page","getPopularMovie","query","get","data","getMovieDetails","id","getImagesSettings","getMovieCast","getMovies","getReviews","from","useLocation","state","to","movieId","useParams","useState","details","setDetails","image","setImage","title","poster_path","vote_average","overview","genres","base_url","poster_sizes","navigate","useNavigate","useEffect","fetchMovieDetails","console","log","message","fetchImageSettings","images","handleBack","useCallback","type","onClick","className","scss","src","length","size","alt","toFixed","string","map","name","push","join","genresString"],"sourceRoot":""}