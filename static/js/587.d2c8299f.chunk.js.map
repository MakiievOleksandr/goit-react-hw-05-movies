{"version":3,"file":"static/js/587.d2c8299f.chunk.js","mappings":"sPASA,EATmB,SAAC,GAClB,OADkC,EAAdA,QACLC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACjB,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADQ,GAMpB,E,SCgCD,EAhCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAW,mCAAG,gHAEUC,EAAAA,EAAAA,IAAWJ,GAFrB,gBAERK,EAFQ,EAERA,QACRN,EAAWM,GAHK,gDAKhBC,QAAQC,IAAI,KAAMC,SALF,yDAAH,qDASjBL,GACD,GAAE,CAACH,KAGF,4BACE,qCACA,yBACU,OAAPP,QAAO,IAAPA,OAAA,EAAAA,EAASgB,QAAS,GACjB,SAAC,EAAD,CAAYhB,QAASA,KAErB,yEAKT,C,8MCnCKiB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,KAAM,KAIGC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAASQ,IAAT,iBAAuBD,IADjB,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMzB,GAAN,yFACNe,EAASQ,IAAT,iBAAuBvB,IADjB,uBACrBwB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAIfE,EAAiB,mCAAG,sGACRX,EAASQ,IAAT,kBADQ,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAIjBG,EAAY,mCAAG,WAAM3B,GAAN,yFACHe,EAASQ,IAAT,iBAAuBvB,EAAvB,aADG,uBAClBwB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAIZI,EAAS,mCAAG,WAAMN,GAAN,yFACAP,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CACNI,MAAOA,KAHY,uBACfE,EADe,EACfA,KADe,kBAMhBA,GANgB,2CAAH,sDASTf,EAAU,mCAAG,WAAMT,GAAN,yFACDe,EAASQ,IAAT,iBAAuBvB,EAAvB,aADC,uBAChBwB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/module/Reviews/ReviewList.jsx","components/module/Reviews/Reviews.jsx","components/shared/services/movies-api.js"],"sourcesContent":["const ReviewList = ({ reviews }) => {\n  return reviews.map(({ id, author, content }) => (\n    <li key={id}>\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n};\n\nexport default ReviewList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ReviewList from './ReviewList';\n\nimport { getReviews } from 'components/shared/services/movies-api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n \n    const fetchReview = async () => {\n      try {\n        const { results } = await getReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchReview();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews?.length > 0 ? (\n          <ReviewList reviews={reviews} />\n        ) : (\n          <p>We don't have any review about this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '2fc9cddb581d13f9fbb06828f41e996e',\n    page: 1,\n  },\n});\n\nexport const getPopularMovie = async query => {\n  const { data } = await instance.get(`/movie/${query}`);\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\nexport const getImagesSettings = async () => {\n  const { data } = await instance.get(`/configuration`);\n  return data;\n};\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getMovies = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["reviews","map","id","author","content","useState","setReviews","movieId","useParams","useEffect","fetchReview","getReviews","results","console","log","message","length","instance","axios","baseURL","params","api_key","page","getPopularMovie","query","get","data","getMovieDetails","getImagesSettings","getMovieCast","getMovies"],"sourceRoot":""}